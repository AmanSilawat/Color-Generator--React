{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hex_color","useState","alert","set_alert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","set_color","error","set_error","Values","all","list","set_list","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,IC8BvDC,EAjCK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAuB,KAAhBC,UACdC,oBAAS,IADqB,mBAClDC,EADkD,KAC3CC,EAD2C,KAEnDC,EAAMP,EAAIQ,KAAK,KAEfhB,EAAMG,EAAQ,WAAR,cAAYK,IAgBxB,OARAS,qBAAU,WACR,IAAIC,EAAUC,YAAW,WACvBL,GAAU,KACT,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACL,IAGF,6BACEQ,UAAS,gBAAWX,EAAQ,IAAM,eAClCY,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,MACxBS,QAjBsB,WACxBV,GAAU,GACVW,UAAUC,UAAUC,UAAU3B,KAiB5B,uBAAGqB,UAAU,iBAAiBZ,EAA9B,KACA,uBAAGY,UAAU,eAAerB,GAC3Ba,GAAS,uBAAGQ,UAAU,SAAb,yB,gBCaDO,MAvCf,WAAgB,IAAD,EACchB,mBAAS,IADvB,mBACNiB,EADM,KACCC,EADD,OAEclB,oBAAS,GAFvB,mBAENmB,EAFM,KAECC,EAFD,OAGYpB,mBAAS,IAAIqB,IAAO,WAAWC,IAAI,KAH/C,mBAGNC,EAHM,KAGAC,EAHA,KAoBb,OACE,oCACE,6BAASf,UAAU,aACjB,+CACA,0BAAMgB,SAnBU,SAACC,GACrBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAASI,GACTR,GAAU,GAEV,MAAOD,GACPC,GAAU,GACVS,QAAQC,IAAIX,EAAO,YAWf,2BAAOY,KAAK,OAAOtB,UAAS,UAAKU,EAAQ,QAAU,IAAMa,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAOR,EAAUQ,EAAEQ,OAAOF,QAAQG,YAAY,YAC/H,4BAAQ1B,UAAU,MAAMsB,KAAK,UAA7B,YAIJ,6BAAStB,UAAU,UAChBc,EAAKa,KAAI,SAACnB,EAAOnB,GAChB,OAAO,kBAAC,EAAD,eAAauC,IAAKvC,GAAWmB,EAA7B,CAAoCnB,MAAOA,EAAOC,UAAWkB,EAAM7B,aChCpFkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ccc4fe54.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({ rgb, weight, index, hex_color }) => {\n  const [alert, set_alert] = useState(false);\n  const bcg = rgb.join(',');\n  \n  const hex = rgbToHex(...rgb); // using function to get hex color\n  // console.log(hex_color); // using library to get hex color\n\n  const handler_clipboard = () => {\n    set_alert(true);\n    navigator.clipboard.writeText(hex);\n  }\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      set_alert(false);\n    }, 3000)\n\n    return () => clearTimeout(timeout);\n  }, [alert])\n\n  return (\n    <article\n      className={`color ${index > 10 && 'color-light'}`}\n      style={{ backgroundColor: `rgb(${bcg})` }}\n      onClick={handler_clipboard}\n    >\n      <p className=\"percent-value\">{weight}%</p>\n      <p className=\"color-value\">{hex}</p>\n      {alert && <p className=\"alert\">copied to clipboard</p>}\n    </article>\n  )\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n  const [color, set_color] = useState('');\n  const [error, set_error] = useState(false);\n  const [list, set_list] = useState(new Values('#954545').all(10));\n\n  const handle_submit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      set_list(colors)\n      set_error(false);\n\n    } catch (error) {\n      set_error(true);\n      console.log(error, 'error')\n\n    }\n  }\n\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color generator</h3>\n        <form onSubmit={handle_submit}>\n          <input type=\"text\" className={`${error ? 'error' : ''}`} value={color} onChange={(e) => set_color(e.target.value)} placeholder=\"#115025\" />\n          <button className=\"btn\" type=\"submit\">submit</button>\n        </form>\n      </section>\n\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          return <SingleColor key={index} {...color} index={index} hex_color={color.hex} />\n        })}\n      </section>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}